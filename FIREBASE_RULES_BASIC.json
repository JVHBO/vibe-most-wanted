{
  "rules": {
    "rooms": {
      "$roomCode": {
        ".read": true,
        ".write": true,
        ".validate": "newData.hasChildren(['id', 'code', 'host', 'status', 'createdAt'])",
        "id": {
          ".validate": "newData.isString() && newData.val() === $roomCode"
        },
        "code": {
          ".validate": "newData.isString() && newData.val() === $roomCode"
        },
        "host": {
          ".validate": "newData.hasChildren(['address', 'ready', 'cards', 'power'])",
          "address": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "ready": {
            ".validate": "newData.isBoolean()"
          },
          "cards": {
            ".validate": "newData.hasChildren()"
          },
          "power": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        },
        "guest": {
          ".validate": "newData.hasChildren(['address', 'ready', 'cards', 'power'])",
          "address": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "ready": {
            ".validate": "newData.isBoolean()"
          },
          "cards": {
            ".validate": "newData.hasChildren()"
          },
          "power": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        },
        "status": {
          ".validate": "newData.val() === 'waiting' || newData.val() === 'ready' || newData.val() === 'playing' || newData.val() === 'finished'"
        },
        "winner": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "matchmaking": {
      "$address": {
        ".read": true,
        ".write": true,
        ".validate": "newData.hasChildren(['timestamp'])",
        "timestamp": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "profiles": {
      "$address": {
        ".read": true,
        ".write": "newData.child('address').val() === $address",
        ".validate": "newData.hasChildren(['address', 'username', 'createdAt', 'lastUpdated', 'stats'])",
        "address": {
          ".validate": "newData.isString() && newData.val() === $address"
        },
        "username": {
          ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 20"
        },
        "twitter": {
          ".validate": "newData.isString() && newData.val().length >= 1 && newData.val().length <= 15"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber()"
        },
        "stats": {
          ".validate": "newData.hasChildren(['totalCards', 'totalPower', 'pveWins', 'pveLosses', 'pvpWins', 'pvpLosses'])",
          "totalCards": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "totalPower": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "pveWins": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "pveLosses": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "pvpWins": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "pvpLosses": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        }
      }
    },

    "usernames": {
      "$username": {
        ".read": true,
        ".write": true,
        ".validate": "newData.isString() && newData.val().length > 0"
      }
    },

    "matches": {
      "$matchId": {
        ".read": true,
        ".write": true,
        ".validate": "newData.hasChildren(['id', 'playerAddress', 'type', 'result', 'playerPower', 'opponentPower', 'timestamp', 'playerCards', 'opponentCards'])",
        "id": {
          ".validate": "newData.isString()"
        },
        "playerAddress": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "type": {
          ".validate": "newData.val() === 'pve' || newData.val() === 'pvp'"
        },
        "result": {
          ".validate": "newData.val() === 'win' || newData.val() === 'loss' || newData.val() === 'tie'"
        },
        "playerPower": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "opponentPower": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "opponentAddress": {
          ".validate": "newData.isString()"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "playerCards": {
          ".validate": "newData.hasChildren()"
        },
        "opponentCards": {
          ".validate": "newData.hasChildren()"
        }
      }
    }
  }
}
